{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","react_default","a","createElement","className","src","concat","alt","Cardlist","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onSearchChange","event","target","value","_this2","fetch","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_Cardlist","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.5b3b4ddb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card=(props)=>{\r\n    const {name,email,id}=props;\r\n    return(\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?200x200`} alt='robots' />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist=({robots})=>{\r\n    // if(true){\r\n    //     throw new Error('Nooooo!');\r\n    // }\r\n    return(\r\n        <div>\r\n       {\r\n           robots.map((user,i)=>{\r\n            return ( \r\n            <Card \r\n            key={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n             />\r\n            );\r\n        })\r\n       }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from \"react\";\r\n\r\nconst SearchBox=({searchfield,searchChange})=>{\r\n    return(\r\n       <div className=\"pa2\">\r\n            <input \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            type='search' \r\n            placeholder=\"search robots\"\r\n            onChange={searchChange}\r\n            />\r\n       </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nconst Scroll=(props)=>{\r\n    return(\r\n<div style={{overflowY:'scroll',border:'1px solid black',height:'500px'}}>\r\n    {props.children }\r\n</div>\r\n    );\r\n}\r\nexport default Scroll;","import React,{Component} from \"react\";\r\n\r\nclass ErrorBoundry extends Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        hasError:false\r\n    }\r\n}\r\ncomponentDidCatch(error,info){\r\n this.setState({hasError:true})\r\n}\r\nrender(){\r\n   if(this.state.hasError){\r\n       return <h1>Oooops. That is not good</h1>\r\n   }\r\n   return this.props.children\r\n} \r\n}\r\nexport default ErrorBoundry;","import React,{Component} from \"react\";\n//..leave the folder container go to the components\nimport Cardlist from \"../components/Cardlist\";\n\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport { robots } from \"../robots\";\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\n// STATE>>PROPS state means an object that describes our application\n// const state={\n//     robots:robots,\n//     searchfield:''\n// }\nclass App extends Component{\n    // adding state\n    constructor(){\n        super()\n        this.state={\n            robots:[],\n            searchfield:''\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=>{\n           return response.json();\n        })\n        .then(users=>{\n            this.setState({robots:users});\n        })\n       \n    }\n    onSearchChange=(event)=>{\n            this.setState({searchfield:event.target.value})\n       \n       \n    }\n   render(){\n       const{robots,searchfield}=this.state;\n    const filteredRobots=robots.filter(robot=>{\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    if(robots.length===0){\n        return <h1>Loading</h1>\n    } else{\n    return(\n        <div  className=\"tc\">\n             <h1 className=\"f2\">Robo Friends</h1>\n             <SearchBox searchChange={this.onSearchChange}/>\n       <Scroll>\n           <ErrorBoundry>\n           <Cardlist robots={filteredRobots}/>\n           </ErrorBoundry>   \n       </Scroll>\n        </div>\n     );\n    }\n   }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import { robots } from './robots';\n// import Cardlist from './Cardlist';\nimport App from './containers/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App/>\n  \n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}